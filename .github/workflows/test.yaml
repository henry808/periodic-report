name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test
      run: |
        python --version
        ./request.py
    - uses: EndBug/add-and-commit@v6 # You can change this to use a specific version
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: data.txt

        # The name of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_name: Your Name

        # The email of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        author_email: mail@example.com

        # Name of the branch to use, if different from the one that triggered the workflow
        # Default: the branch that triggered the run
        branch: result-branch

        # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
        # Default: '.'
        cwd: '.'

        # The message for the commit
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'Update data.'

        # # The flag used on the pull strategy
        # # Default: '--no-rebase'
        # pull_strategy: '--no-rebase or --no-ff or --rebase'

        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
        # Default: true
        push: origin result-branch --force

        # # The arguments for the `git rm` command (see the paragraph below for more info)
        # # Default: ''
        # remove: './dir/old_file.js'

        # # Whether to use the --signoff option on `git commit` (only `true` and `false` are accepted)
        # # Default: false
        # signoff: true

        # # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
        # # Default: ''
        # tag: 'v1.0.0 --force'

        # # The token to use to access the GitHub API when getting the author info (see the paragraph below for more info about the tokens used by the action)
        # # Default: secrets.GITHUB_TOKEN
        # token: ${{ secrets.GITHUB_TOKEN }}